GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
4. Создать внешний репозиторий c названием JSON.
	- 
5. Клонировать репозиторий JSON на локальный компьютер.
	- $ git clone https://github.com/artemdashkov/JSON.git
6. Внутри локального JSON создать файл “new.json”.
	- $ touch new.json
7. Добавить файл под гит.
	- $ git add new.json
8. Закоммитить файл.
	- $ git commit -m "add file new.json on repository"
9. Отправить файл на внешний GitHub репозиторий.
	- $ git push origin main
10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
	{
        "first_name": "Artem",
        "last_name": "Dashkov",
        "age": 35,
        "number_of_pets": 0,
        "desired_salary, $": 2000
	}
11. Отправить изменения на внешний репозиторий.
	$ git add new.json
	$ git commit -m "modified new.json"
	$ git push origin main
	
12. Создать файл preferences.json
	$ touch preferences.json
	
13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
	$ cat preferences.json
	{
			"favorite_film":"Back to the Future",
			"favorite_serial":"Friends",
			"favorite_food":"Fried chicken",
			"favorite_season":"Summer",
			"country_for_visit":"Australia"

	}
	
14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
	$ touch skills.json
	$ vim skills.json
	
15. Отправить сразу 2 файла на внешний репозиторий.
	$ git add preferences.json skills.json
	$ git commit -m "add skills and preferences files"
	$ git push origin main

16. На веб интерфейсе создать файл bug_report.json.
	+

17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	+

18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
	+
19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	+
20. Синхронизировать внешний и локальный репозиторий JSON
	$ git fetch
	$ git pull

XML
21. Создать внешний репозиторий c названием XML.
22. Клонировать репозиторий XML на локальный компьютер.
23. Внутри локального XML создать файл “new.xml”.
24. Добавить файл под гит.
25. Закоммитить файл.
26. Отправить файл на внешний GitHub репозиторий.
27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
28. Отправить изменения на внешний репозиторий.
29. Создать файл preferences.xml
30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
32. Сделать коммит в одну строку.
33. Отправить сразу 2 файла на внешний репозиторий.
34. На веб интерфейсе создать файл bug_report.xml.
35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
38. Синхронизировать внешний и локальный репозиторий XML