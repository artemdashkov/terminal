Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
4. Создать внешний репозиторий c названием JSON.
	- 
5. Клонировать репозиторий JSON на локальный компьютер.
	- $ git clone https://github.com/artemdashkov/JSON.git
6. Внутри локального JSON создать файл “new.json”.
	- $ touch new.json
7. Добавить файл под гит.
	- $ git add new.json
8. Закоммитить файл.
	- $ git commit -m "add file new.json on repository"
9. Отправить файл на внешний GitHub репозиторий.
	- $ git push origin main
10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
	{
        "first_name": "Artem",
        "last_name": "Dashkov",
        "age": 35,
        "number_of_pets": 0,
        "desired_salary, $": 2000
	}
11. Отправить изменения на внешний репозиторий.
	$ git add new.json
	$ git commit -m "modified new.json"
	$ git push origin main
	
12. Создать файл preferences.json
	$ touch preferences.json
	
13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
	$ cat preferences.json
	{
			"favorite_film":"Back to the Future",
			"favorite_serial":"Friends",
			"favorite_food":"Fried chicken",
			"favorite_season":"Summer",
			"country_for_visit":"Australia"

	}
	
14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
	$ touch skills.json
	$ vim skills.json
	
15. Отправить сразу 2 файла на внешний репозиторий.
	$ git add preferences.json skills.json
	$ git commit -m "add skills and preferences files"
	$ git push origin main

16. На веб интерфейсе создать файл bug_report.json.
	+

17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	+

18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
	+
19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	+
20. Синхронизировать внешний и локальный репозиторий JSON
	$ git fetch
	$ git pull

XML
21. Создать внешний репозиторий c названием XML.
	+
22. Клонировать репозиторий XML на локальный компьютер.
	$ git clone https://github.com/artemdashkov/XML.git
	
23. Внутри локального XML создать файл “new.xml”.
	$ touch new.xml

24. Добавить файл под гит.
	$ git add new.xml
	
25. Закоммитить файл.
	$ git commit -m "create file new.xml"
	
26. Отправить файл на внешний GitHub репозиторий.
	$ git push origin main

27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
	<?xml version="1.1" encoding="UTF-8" ?>
	<about_myself>
		<first_name>Aretm</first_name>
		<last_name>Dashkov</last_name>
		<age>35</age>
		<number_of_pet>0</number_of_pet>
		<desired_salary>2000</desired_salary>
	</about_myself>

28. Отправить изменения на внешний репозиторий.
	git add new.xml
	git commit -m "update file"
	git push origin main
29. Создать файл preferences.xml
	touch preferences.xml
30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
	<my_preferences>
		<film>Back to the Future</film>
		<serial>Friends</serial>
		<food>Fried chicken</food>
		<season>Summer</season>
		<country_for_visit>Australia</country_for_visit>
	</my_preferences>
31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
	touch skills.xml
32. Сделать коммит в одну строку.
	$ git add preferences.xml skills.xml
	$ git commit -m "add at the same time two files: preferences.xml and skills.xml"
33. Отправить сразу 2 файла на внешний репозиторий.
	$ git push origin main
34. На веб интерфейсе создать файл bug_report.xml.
	+
35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	+
36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
	+
37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	+
38. Синхронизировать внешний и локальный репозиторий XML
	$ git fetch
	$ git pull